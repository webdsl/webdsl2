module WebDSL-Recommend

imports
    WebDSL-Lexical
  
exports
    sorts Definition Annotation
  
context-free syntax

%% Dynamic ordering for WebDSL developers
RecommendConfig -> Definition
"recommend" Id "{" RecommendArgument* "}" -> RecommendConfig{cons("RecommendConfig")}
RecommendKey "=" RecommendKeyValue	-> RecommendArgument {cons("RecommendArgument")}

%% Static order implementation for back-end implementation
RecommendConfigStaticOrder -> Definition
"recommenderStaticOrder" Id "{" RecommendUser RecommendItem RecommendValue RecommendAlgorithm RecommendNeighborAlg RecommendNeighborSize RecommendType RecommendSchedule "}" -> RecommendConfigStaticOrder{cons("RecommendConfigStaticOrder")}

%% Static Order implementation
Id -> RecommendUser{cons("RecommendUser")}
Id -> RecommendItem{cons("RecommendItem")}
Id -> RecommendValue{cons("RecommendValue")}
Id -> RecommendAlgorithm{cons("RecommendAlgorithm")}
Id -> RecommendNeighborAlg{cons("RecommendNeighborAlg")}
Id -> RecommendNeighborSize{cons("RecommendNeighborSize")}
Id -> RecommendType{cons("RecommendType")}
Id -> RecommendSchedule{cons("RecommendSchedule")}

lexical syntax
  
%% Dynamic ordering, match to key-value type
"schedule" -> RecommendKey
"type" -> RecommendKey
"neighborhoodalg" -> RecommendKey
"neighborhoodsize" -> RecommendKey
"algorithm" -> RecommendKey
"user" -> RecommendKey
"item" -> RecommendKey
"value" -> RecommendKey
context-free syntax
Id -> RecommendKeyValue
Int -> RecommendKeyValue
TimeInterval -> RecommendKeyValue