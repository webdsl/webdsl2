module WebDSL-XML
  
exports
  context-free syntax
  
    "<" QualName Attribute* "/>" -> TemplateElement {cons("XMLEmptyElement")}
    
    "<" QualName Attribute* ">"
      TemplateElement*
      "</" QualName ">" -> TemplateElement {cons("XMLElement")}

  context-free syntax %% if(){} and if(){}else{} inside an XML element containing a list of attributes

    "if" "(" Exp ")" "{" Attribute* "}"		          -> Attribute {cons("XMLAttributesIf")}
    "if" "(" Exp ")" "{" Attribute* "}" "else" "{" Attribute* "}" -> Attribute {cons("XMLAttributesIfElse")}

  context-free syntax

    QualName "=" Exp -> Attribute {cons("Attribute")}
    
    %%easy injection of attributes from template call
    CommonAttribute -> Attribute
    "all attributes"  -> CommonAttribute {cons("AllAttributes")}
    "all attributes except" Exp        -> CommonAttribute {cons("AllAttributeExceptExp")}
    "attributes" Exp        -> CommonAttribute {cons("AttributesExp")}
    
    "attributes" -> KEYWORD
    
exports

  lexical syntax
    Qualifier? NCName -> QualName    
    NCName ":"        -> Qualifier

  
    [A-Za-z\_] [A-Za-z0-9\.\-\_]* -> NCName

  lexical restrictions
    NCName -/- [A-Za-z0-9\.\-\_]
  