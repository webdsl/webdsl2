module datamodel

imports
	include/WebDSL

namespaces
	Entity
	ExtendedEntity
	Property
	Enum
	EnumValue
	
properties

	parent						of Entity: ID
	ancestor					of Entity: List(ID)
	issession					of Entity: Term
	
	kind							of Property: Term
	isderived					of Property: Term
	annotations				of Property: List(Term)
	
binding rules

	Entity(name, par, _):
		defines Entity name
			of parent par
			of type SimpleSort(par)								
		scopes Function, Property
	
	ExtendEntity(name, _):
		defines non-unique ExtendedEntity name
		imports Function, Property from Entity name
		// imports Function, Property into Entity name
	
	SessionEntity(name, _):
		defines Entity name
			of type SimpleSort(par)
		defines Variable name
			of type SimpleSort(name)
			of issession SessionEntity()

	// constraint: SimpleSort(name) is a session entity	
	ExtendSessionEntity(name, _):
		defines non-unique ExtendedEntity name
		imports Function, Property from Entity name
		// imports Function, Property into Entity name

	Property(name, knd, ty, annos):
		defines Property name
			of type ty
			of kind knd
			of annotations annos // TODO: should we just store the entire AST for property definition?
	
	DerivedProperty(name, knd, ty, annos, _):
		defines Property name
			of type ty
			of kind knd
			of annotations annos // TODO: should we just store the entire AST for property definition?
			of isderived Derived()
	
	Enum(name, _):
		defines Enum name
		scopes EnumValue
	
	EnumValue(name, _):
		defines EnumValue name


	
	