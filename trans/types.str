module trans/types

imports
	
	lib/editor-common.generated
	lib/task/core
	function/trans/types

signature

	constructors
		
		Type : Result -> Type
	
rules
	
	print-type = pp-webdsl-string

	// Gets the type of the given term, or fails if the term has no type.
	type-of:
		t{anno*} -> type
		where
			result := <collect-one(?Type(<id>))> anno*;
			type   := <task-get-result; Hd> result

	type-task(|partition):
		t{a*} -> result
		where
			switch !t
				case is-list : where(<map(type-of-task(|partition))> t)
				otherwise    : !t{Type(<type-of-task(|partition)> t), a*}
			end => result
			
rules // Custom type equality
	
	nabl-property-eq(|type):
		(t1, t2) -> <id>
		where
			<debug(!"custom eq: ")> (type, t1, t2);
			<?NablProp_signature()> type;
			<eq> (<strip-annos> t1, <strip-annos> t2)
			
	nabl-disambiguate(|ns):
		list -> list
		